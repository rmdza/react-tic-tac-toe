{"version":3,"sources":["components/Square/Square.js","components/Board/Board.js","components/Game/Game.js","index.js"],"names":["Square","props","react_default","a","createElement","className","onClick","value","Board","i","_this","this","components_Square_Square","squares","renderSquare","Component","calculateWinner","lines","length","_lines$i","Object","slicedToArray","b","c","Game","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","history","Array","fill","xIsNext","stepNumber","slice","setState","concat","step","status","_this2","current","winner","moves","map","move","desc","key","jumpTo","components_Board_Board","handleClick","ReactDOM","render","components_Game_Game","document","getElementById"],"mappings":"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","file":"static/js/main.3f05796a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Square = (props) => {\r\n    return (\r\n        <button\r\n            className=\"square\"\r\n            onClick={props.onClick}\r\n            >\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Square","import React, { Component } from 'react';\r\nimport Square from '../Square/Square';\r\n\r\nclass Board extends Component {\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)} />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board\r\n","import React, { Component } from 'react';\r\nimport Board from '../Board/Board';\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            xIsNext: true,\r\n            stepNumber: 0,\r\n        }\r\n    }\r\n\r\n    handleClick(i) {\r\n        // Creates a new reference for history w/ the current (stepNumber + 1) as the last index\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice(); // Creates a new reference for squares\r\n\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares\r\n            }]),\r\n            xIsNext: !this.state.xIsNext,\r\n            stepNumber: history.length,\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history   = this.state.history;\r\n        const current   = history[this.state.stepNumber];\r\n        const winner    = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move\r\n                        ? 'Go to move #: ' + move\r\n                        : 'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button\r\n                        onClick={() => this.jumpTo(move)}\r\n                        >\r\n                        {desc}\r\n                    </button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n            status = 'Next player ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)} />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n\r\n    return null;\r\n\r\n}\r\n\r\nexport default Game","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './components/Game/Game';\r\nimport './index.css';\r\n\r\nReactDOM.render(<Game />, document.getElementById('root'));"],"sourceRoot":""}